services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile_src
    environment:
      - DATABASE_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD:-root}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-mysql}
      - DATABASE_NAME=${DATABASE_NAME:-laravel}
      - ERROR_REPORTING=${ERROR_REPORTING:-true}
      - DISPLAY_ERROR=${DISPLAY_ERROR:-0}
      - XDEBUG_MODE=${XDEBUG_MODE:-off}
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST:-}
      - APP_ENV=${APP_ENV:-prod}
      - WEB_PORT_EXPOSED=${WEB_PORT_EXPOSED:-8888}
      - SERVICE_NAME=app
      - SERVICE_TAGS=dev
    image: digitalocean.com/php
    container_name: app
    restart: always
    tty: true
    working_dir: /var/www
    volumes:
      - ./main:/var/www
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./main/
          target: /var/www/
          ignore:
            - vendor/

  #Nginx Service
  webserver:
    image: nginx:stable-alpine
    container_name: webserver
    restart: always
    tty: true
    ports:
      - "${WEB_PORT_EXPOSED}:80"
      - "444:443"
    volumes:
      - ./main/:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - app-network

  #MySQL Service
  database:
    image: mysql:8
    container_name: database_2
    restart: always
    tty: true
    ports:
      - "3333:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-root}
      MYSQL_USER: ${DATABASE_USERNAME:-user}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-mysql}
      MYSQL_DATABASE: ${DATABASE_NAME:-laravel}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
